                t <- wilcox.test( jitter(data1), jitter(data2) )
                d[i] <- t$p.value
                s[i] <- t$statistic
        }
        list( mean.p.value =mean (d), mean.statistics=mean(s))
}
two_group( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1] )
two_group( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1])
q()
ls()
summary(data)
mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman')
mean_cor_test('Fråga..9', 'Fråga..10', 'spearman')
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)))
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)), method='spearman')
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)), method='spearman')$p.value
cor.test( jitter(as.numeric(as.character(data2$Fråga..9))) , jitter(as.numeric(as.character(data2$Fråga..10))), method='spearman')$p.value
plot(jitter(as.numeric(as.character(data2$Fråga..9))) , jitter(as.numeric(as.character(data2$Fråga..10))))
x11()
plot(as.numeric(as.character(data2$Fråga..9)) ,as.numeric(as.character(data2$Fråga..10)))
data[mc('Fråga..10', 'Fråga..10.VAS.CRP')
]
data[,c('Fråga..10', 'Fråga..10.VAS.CRP')]
colnmaes(data)
colnames(data)
data[,c('Fråga..10', 'Fråga..10.VAS.strep')]
mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman')
mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman')
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(as.numeric(as.character(data[, colA]))), 
jitter(as.numeric(as.character(data[, colB]))),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r))
}
two_group <- function ( data1, data2 ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d), mean.statistics=mean(s))
}
mean_cor_test('Fråga.6', 'Fråga..9', 'spearman')
stat_results = NULL
stat_results = rbind( stat_results, mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..9', 'Fråga..10', 'spearman') )
stat_results
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1]) )
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1] ) )
stat_results
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(as.numeric(as.character(data[, colA]))), 
jitter(as.numeric(as.character(data[, colB]))),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r), mean.statistics="only two group comparisons")
}
two_group <- function ( data1, data2 ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s))
}
stat_results = NULL
stat_results = rbind( stat_results, mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..9', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1]) )
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1] ) )
stat_results
two_group <- function ( data1, data2, colA, colB ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s))
}
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
)
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
) 
rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
)
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
)
) 
stat_results
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pokar'
)
stat_results = rbind( stat_results, 
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pokar'
)
)
stat_results = rbind( stat_results, 
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pojkar'
)
)
stat_results
stat_results <- stat_results[-18,]
stat_results
write.table( stat_results, file='../tables/AllStatResults.xls', row.names=F, quote=F, sep='\t')
q()
two_group <- function ( data1, data2, colA, colB ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
## plot one
d <- cbind( x=jitter(data1), y=jitter(data2))
d <- d[-unique(sort (c(which( is.na(d[,1])),which( is.na(d[,2])) ))),]
p <- ggplot(data.frame(d), aes( x=x, y=y)) +geom_boxplot()
p <- p + xlab(colA) + ylab(colB)
browser()
Plot(p, paste( sep='_', split( paste ( 'correlation', colA, colB ))) )
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s))
}
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
)
t(data.frame(lapply( data1, function(x) { c( colA, x) } ) )) 
library(ggplot2)
library(reshape2)
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
t(data.frame(lapply( data1, function(x) { c( colA, x) } ) )) 
d <- t(data.frame(lapply( data1, function(x) { c( colA, x) } ) ))
d <- rbind(d, t(data.frame(lapply( data2, function(x) { c( colB, x) } ) )) )
ggplot(d, aes( variable, value)) +geom_boxplot()
 ggplot(data.frame(d), aes( variable, value)) +geom_boxplot()
d <- cbind( x=jitter(data1), y=jitter(data2))
d
melt(d)
melt(data1)
melt(cbind( c(rep('A', 10), rep('B', 10 ), data1)
)
melt(cbind( c(rep('A', 10), rep('B', 10 )), data1))
melt(cbind( c(rep('A', 10), rep('B', 10 ), data1))
)
melt(cbind( c(rep('A', 10), rep('B', 10 )), data1))
c(rep('A', 10), rep('B', 10 ))
data1
cbind( c(rep('A', 10), rep('B', 10 )), data1)
melt(c(rep('A', 10), rep('B', 10 )))
d
d <- t(data.frame(lapply( data1, function(x) { c( colA, x) } ) ))
d <- rbind(d, t(data.frame(lapply( data2, function(x) { c( colB, x) } ) )) )
rownmaes(d)
rownames(d)
rownames(d) <- 1:nrow(d)
rownames(d)
d
ggplot(data.frame(d), aes( variable, value)) +geom_boxplot()
colnames(d) <- c( 'variable', 'value')
ggplot(data.frame(d), aes( variable, value)) +geom_boxplot()
ggplot(data.frame(d), aes( variable, value))
ggplot(data.frame(d), aes( variable, value)) +geom_boxplot()
d[,2] <- as.numeric(as.character(d[,2]))
ggplot(data.frame(d), aes( variable, value)) +geom_boxplot()
d
numeric(d)
is.numeric(d)
class(d)
data.frame(d)
ggplot(data.frame(d), aes( variable, value)) 
ggplot(data.frame(d), aes( variable, value)) 
+geom_boxplot()
ggplot(data.frame(d), aes( variable, value)) +geom_boxplot()
d$value
d = data.frame(d)
d$value
class(d[,2])
d[,2]<- as.numeric(as.character(d[,2]))
d$value
ggplot(d , aes( variable, value)) +geom_boxplot()
p <- ggplot(d , aes( variable, value)) +geom_boxplot()
p <- p + xlab(colA) + ylab(colB)
p
p <- p + xlab('') + ylab('')
p
split( paste ( 'correlation', colA, colB ))) 
paste( sep='_', split( paste ( 'correlation', colA, colB )))
paste("correlation", colA, colB)
paste("correlation", make.names(colA, colB))
paste("correlation", make.name(colA, colB))
make.names
paste("correlation", make.name(c(colA, colB)))
paste("correlation", make.names(c(colA, colB)))
paste("correlation", make.names(c(colA, colB)), collapse=" ")
paste( sep='_',split(" ", paste("correlation", make.names(c(colA, colB)), collapse=" ")))
paste( sep='_',split( paste("correlation", make.names(c(colA, colB)), collapse=" ")))
paste( sep='_',split("", paste("correlation", make.names(c(colA, colB)), collapse=" ")))
paste( sep='_',unlist(split(" ", paste("correlation", make.names(c(colA, colB)), collapse=" "))))
split(" ", paste("correlation", make.names(c(colA, colB)), collapse=" ")))
split(" ", paste("correlation", make.names(c(colA, colB)), collapse=" "))
?split
split( paste("correlation", make.names(c(colA, colB)), collapse=" "), " ")
?split
library(stringr)
str_replace( paste("correlation", make.names(c(colA, colB)), collapse=" "), '\\s', '_' )
str_replace( paste("correlation", make.names(c(colA, colB)), collapse=" "), '\s', '_' )
str_replace( paste("correlation", make.names(c(colA, colB)), collapse=" "), "\\s", '_' )
make.names( paste("correlation", make.names(c(colA, colB)), collapse=" "))
str_replace(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\.+","_") 
str_replace(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_") 
str_replace(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\.+","_", perl=T) 
str_replace(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_", perl=T) 
?str_replace
str_replace(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), ".+","_", perl=T) 
str_replace(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), ".+","_") 
?str_replace
str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), ".+","_") 
str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), ".","_") 
str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\.","_") 
str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.","_") 
str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_") 
str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_")
Plot( p, paste( numeric(d), str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_") )
)
p
Plot( p,  str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_") )
Q
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
#plot one
data1 <- as.numeric(as.character(data[, colA]))
data2 <- as.numeric(as.character(data[, colB]))
d <- cbind( x=jitter(data1), y=jitter(data2))
d <- d[-unique(sort (c(which( is.na(d[,1])),which( is.na(d[,2])) ))),]
p <- ggplot(data.frame(d), aes(x=x,y=y) ) + geom_point()
p <- p + xlab(colA) + ylab(colB)
browser()
Plot( p,  str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_") )
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(data1), 
jitter(data2),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r), mean.statistics="only two group comparisons")
}
mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') 
p
Q
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
#plot one
data1 <- as.numeric(as.character(data[, colA]))
data2 <- as.numeric(as.character(data[, colB]))
d <- cbind( x=jitter(data1), y=jitter(data2))
d <- d[-unique(sort (c(which( is.na(d[,1])),which( is.na(d[,2])) ))),]
p <- ggplot(data.frame(d), aes(x=x,y=y) ) + geom_point()
p <- p + xlab(colA) + ylab(colB)
browser()
fn = str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_")
Plot( p,  fn )
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(data1), 
jitter(data2),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r), mean.statistics="only two group comparisons", figure=fn)
}
two_group <- function ( data1, data2, colA, colB ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
## plot one
d <- t(data.frame(lapply( data1, function(x) { c( colA, x) } ) ))
d <- rbind(d, t(data.frame(lapply( data2, function(x) { c( colB, x) } ) )) )
d[,2] <- as.numeric(as.character(d[,2]))
rownames(d) <- 1:nrow(d)
colnames(d) <- c( 'variable', 'value')
d <- data.frame(d)
d[,2]<- as.numeric(as.character(d[,2]))
p <- ggplot(d , aes( variable, value)) +geom_boxplot()
p <- p + xlab('') + ylab('')
fn = str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_")
Plot( p,  fn )
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s), figure=fn)
}
mean_cor_test('Fråga.6', 'Fråga..9', 'spearman')
p
Q
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
#plot one
data1 <- as.numeric(as.character(data[, colA]))
data2 <- as.numeric(as.character(data[, colB]))
d <- cbind( x=jitter(data1), y=jitter(data2))
d <- d[-unique(sort (c(which( is.na(d[,1])),which( is.na(d[,2])) ))),]
p <- ggplot(data.frame(d), aes(x=x,y=y) ) + geom_point()
p <- p + xlab(colA) + ylab(colB)
fn = str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_")
Plot( p,  fn )
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(data1), 
jitter(data2),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r), mean.statistics="only two group comparisons", figure=fn)
}
two_group <- function ( data1, data2, colA, colB ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
## plot one
d <- t(data.frame(lapply( data1, function(x) { c( colA, x) } ) ))
d <- rbind(d, t(data.frame(lapply( data2, function(x) { c( colB, x) } ) )) )
d[,2] <- as.numeric(as.character(d[,2]))
rownames(d) <- 1:nrow(d)
colnames(d) <- c( 'variable', 'value')
d <- data.frame(d)
d[,2]<- as.numeric(as.character(d[,2]))
p <- ggplot(d , aes( variable, value)) +geom_boxplot()
p <- p + xlab('') + ylab('')
fn = str_replace_all(make.names( paste("correlation", make.names(c(colA, colB)), collapse=" ")), "\\.+","_")
Plot( p,  fn )
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s), figure=fn)
}
stat_results
s <- stat_results
stat_results = rbind( stat_results, mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..9', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
)
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
)
) 
id_f =which(data$kön == 'f' & data$Åldern != '10-13')
id_p =which(data$kön == 'p' & data$Åldern != '10-13')
stat_results = rbind( stat_results, 
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pojkar'
)
)
stat_results
stat_results = NULL
stat_results = rbind( stat_results, mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..9', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
)
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
)
) 
id_f =which(data$kön == 'f' & data$Åldern != '10-13')
id_p =which(data$kön == 'p' & data$Åldern != '10-13')
stat_results = rbind( stat_results, 
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pojkar'
)
)
stat_results
q()
