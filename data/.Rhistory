<<<<<<< HEAD
plot( as.numeric(as.character(data$Fråga.5)) ~ data$Åldern)
anova(lm( as.numeric(data$Fråga.5) ~ data$Åldern))$"Pr(>F)"[1]
#[1] 1.06104e-05
input_cols <- c('Fråga.5','Fråga.6','Fråga.7','Fråga..8','Fråga..9','Fråga..10.VAS.CRP','Fråga..10.VAS.strep' )
p.vals1 <- unlist(lapply( input_cols , function(cname) {
anova(lm( as.numeric(as.character(data[,cname])) ~ data$Åldern))$"Pr(>F)"[1]
} ))
names(p.vals1) <- input_cols
p.vals1
plot( as.numeric(as.character(data$Fråga.5)) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[1]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[2]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[3]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[4]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[5]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[6]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[7]])) ~ data$Åldern)
plot( as.numeric(as.character(data[,input_cols[6]])) ~ data$Åldern)
summary(data)
plot(data$Förkylning~data$Halsont)
plot(data$Förkylning~data$Feber)
plot(data$Feber~data$morgontemperatur)
plot(data$Feber,data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[6]])) , data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[1]])) , data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[2]])) , data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[3]])) , data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[4]])) , data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[5]])) , data$morgontemperatur)
plot( as.numeric(as.character(data[,input_cols[1]])) , scatter(data$morgontemperatur))
scatter
?scatter
plot( as.numeric(as.character(data[,input_cols[1]])) , jitter(data$morgontemperatur))
plot( jitter(as.numeric(as.character(data[,input_cols[1]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[2]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[3]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[4]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[5]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[6]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[7]]))) , data$morgontemperatur)
plot( jitter(as.numeric(as.character(data[,input_cols[1]]))) , data$morgontemperatur)cor.test(jitter(as.numeric(as.character(data[,input_cols[1]]))) , data$morgontemperatur)
cor.test(jitter(as.numeric(as.character(data[,input_cols[1]]))) , data$morgontemperatur)
        t <- cor.test(as.numeric(as.character(data[,input_cols[1]])) , data$morgontemperatur)
t
names(t)
t$estimate
t$estimate
temperature_corr <- NULL
for ( i in 1:length(input_cols)){
        t <- cor.test(as.numeric(as.character(data[,input_cols[1]])) , data$morgontemperatur)
        temperature_corr <- rbind(temperature_corr, c(t$estimate, t$p.value))
}
rownames(temperature_corr) <- input_cols
temperature_corr
temperature_corr <- NULL
for ( i in 1:length(input_cols)){
        t <- cor.test(as.numeric(as.character(data[,input_cols[i]])) , data$morgontemperatur)
        temperature_corr <- rbind(temperature_corr, c(t$estimate, t$p.value))
}
rownames(temperature_corr) <- input_cols
colnames('pearson rho','p value')
temperature_corr
colnames(temperature_corr) <- c('pearson rho','p value')
temperature_corr
run_annova <- function( colname ) {
        p.vals1 <- unlist(lapply( input_cols , function(cname) {
                anova(lm( as.numeric(as.character(data[,cname])) ~ data[,colname]))$"Pr(>F)"[1]
        } ))
        names(p.vals1) <- input_cols
        p.vals1
}
(p.vals1 <- run_annova('Åldern'))
summary(data)
(p.vals.kön <- run_annova('kön'))
(p.vals.Förkylning <- run_annova('Förkylning'))
(p.vals.Ont.i.öron <- run_annova('Ont.i.öron'))
(p.vals.Hosta <- run_annova('Hosta'))
save(data,file="data.RData")
q()
ls()
library(stringr)
install.packages('stringr')
cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10.VAS.CRP)) )
data
summarc(data)
summarz(data)
summary(data)
summary(data)
table(data$Åldern, data$Fråga..10.VAS.CRP)
res <- table(data$Åldern, data$Fråga..10.VAS.CRP)
which(res) == 0
which(res == 0)
res[ which(res == 0)
]
res[ which(res == 0)] = '-'
res
write.table( res, file="Åldern_vs_Fråga10.VAS.CRP.xls", sep="\t" , quote=F)
res2 <- table(data$Åldern, data$Fråga..9)
res2[ which(res2 == 0)] = '-'
res2
mean(rep( 0,9),rep(1,5),rep(2,6),rep(3,7),rep(4,2),rep(5,5),rep(6,5),rep(7,8),rep(9,4),rep(10,2))
mean(c(rep( 0,9),rep(1,5),rep(2,6),rep(3,7),rep(4,2),rep(5,5),rep(6,5),rep(7,8),rep(9,4),rep(10,2)))
se(c(rep( 0,9),rep(1,5),rep(2,6),rep(3,7),rep(4,2),rep(5,5),rep(6,5),rep(7,8),rep(9,4),rep(10,2)))
sd(c(rep( 0,9),rep(1,5),rep(2,6),rep(3,7),rep(4,2),rep(5,5),rep(6,5),rep(7,8),rep(9,4),rep(10,2)))
mean(c(rep(0,3),rep(10,2),rep(2,5),rep(4,4),rep(5,4),rep(6,3),rep(7,1),rep(8,1)))
sd(c(rep(0,3),rep(10,2),rep(2,5),rep(4,4),rep(5,4),rep(6,3),rep(7,1),rep(8,1)))
mean(c(rep(0,2),rep(10,1),rep(2,6),rep(3,2),rep(4,5),rep(6,1))))
mean(c(rep(0,2),rep(10,1),rep(2,6),rep(3,2),rep(4,5),rep(6,1)))
sd(c(rep(0,2),rep(10,1),rep(2,6),rep(3,2),rep(4,5),rep(6,1)))
res
mean(c(rep(0,10),rep(2,4),rep(4,3),rep(5,1)))
sd(c(rep(0,10),rep(2,4),rep(4,3),rep(5,1)))
mean(c(rep(0,6),rep(2,3))
)
mean(c(rep(0,6),rep(2,3)))
sdn(c(rep(0,6),rep(2,3)))
sd(c(rep(0,6),rep(2,3)))
res2
mean(c(rep(0,7),rep(1,5),rep(2,4),rep(3,2),rep(4,4),rep(5,2),rep(6,4),rep(8,1),rep(10,3)))
sd(c(rep(0,7),rep(1,5),rep(2,4),rep(3,2),rep(4,4),rep(5,2),rep(6,4),rep(8,1),rep(10,3)))
mean(c(rep(0,7),rep(1,1),rep(2,3),rep(3,5),rep(4,2),rep(5,1),rep(6,1),rep(10,1)))
sd(c(rep(0,7),rep(1,1),rep(2,3),rep(3,5),rep(4,2),rep(5,1),rep(6,1),rep(10,1)))
mean(c(rep(0,9),rep(1,6),rep(2,4),rep(3,4),rep(4,3)))
sd(c(rep(0,9),rep(1,6),rep(2,4),rep(3,4),rep(4,3)))
mean(c(rep(0,11),rep(1,4),rep(3,1)))
sd (c(rep(0,11),rep(1,4),rep(3,1)))
res3 <- table(data$Åldern, data$Fråga..10.VAS.strep)
res3 <- table(data$Åldern, data$Fråga..10.VAS.strep)
res3[ which(res3 == 0)] = '-'
res3
mean(c(rep(0,2),rep(10,1),rep(2,2),rep(4,1),rep(5,
mean(c(rep(0,2),rep(10,1),rep(2,2),rep(4,1),rep(5,1),rep(6,2)))
sd(c(rep(0,2),rep(10,1),rep(2,2),rep(4,1),rep(5,1),rep(6,2)))
mean(c(rep(0,2),rep(4,1),rep(6,1)))
sd(c(rep(0,2),rep(4,1),rep(6,1)))
mean(c(rep(0,1),rep(1,2),rep(2,2),rep(4,3),rep(5,1),rep(6,1)))
sd(c(rep(0,1),rep(1,2),rep(2,2),rep(4,3),rep(5,1),rep(6,1)))
mean(c(rep(0,5),rep(10,1),rep(2,1),rep(6,1)))
sd(c(rep(0,5),rep(10,1),rep(2,1),rep(6,1)))
summary(data)
summary(data)
dim(data)
data[,c(27:29)]
as.numeric(data[,28])
as.numeric(as.character(data[,28]))
is.numeric(as.numeric(as.character(data[,28])))
(as.numeric(as.character(data[,28])))
is.na((as.numeric(as.character(data[,28])))==F)
is.na((as.numeric(as.character(data[,28])))==T)
is.na(as.numeric(as.character(data[,28]))==T)
is.na(as.numeric(as.character(data[,28]))==F)
is.na(as.numeric(as.character(data[,28])))==F)
is.na(as.numeric(as.character(data[,28])))==F
data$CRP = is.na(as.numeric(as.character(data[,28])))==F
summary(data)
data$STREP = is.na(as.numeric(as.character(data[,29])))==F
summary(data)
mean_sd <- function( column, age ) {
)
mean_sd <- function( column, age, crp=T ) {
if ( crp ) {
ids <- which(data[,'Åldern'] == age && data[,'CRP'] )
}else{
ids <- which(data[,'Åldern'] == age && data[,'STREP'] )
}
m = mean( data[,column] )
s = sd ( data[,column] )
c (m , s)
}
mean_sd( 'Fråga..10.VAS.CRP', '7-9', crp=T)
mean_sd <- function( column, age, crp=T ) {
if ( crp ) {
ids <- which(data[,'Åldern'] == age && data[,'CRP'] )
}else{
ids <- which(data[,'Åldern'] == age && data[,'STREP'] )
}
browser()
m = mean( data[,column] )
s = sd ( data[,column] )
c (m , s)
}
mean_sd( 'Fråga..10.VAS.CRP', '7-9', crp=T)
ids
data[,'Åldern'] == age
 data[,'CRP']
ids <- which(data[,'Åldern'] == age & data[,'CRP'] )
ids
m = mean( data[id,column] )
m = mean( data[ids,column] )
m = mean( data[ids,column] )
m = mean(as.numeric(as.character( data[ids,column] )))
m
as.numeric(as.character( data[ids,column] ))
Q
mean_sd <- function( column, age, crp=T ) {
if ( crp ) {
ids <- which(data[,'Åldern'] == age & data[,'CRP'] )
}else{
ids <- which(data[,'Åldern'] == age & data[,'STREP'] )
}
#browser()
m = mean( as.numeric(as.character( data[ids,column] )))
s = sd ( as.numeric(as.character( data[ids,column] )))
c (m , s)
}
mean_sd( 'Fråga..10.VAS.CRP', '7-9', crp=T)
mean_sd( 'Fråga..10.VAS.CRP', '7-9', crp=F)
data[,c(27:31)]
mean_sd( 'Fråga..9', '7-9', crp=T)
mean_sd( 'Fråga..9', '0-3', crp=T)
mean_sd( 'Fråga..9', '4-6', crp=T)
mean_sd( 'Fråga..9', '7-10', crp=T)
mean_sd( 'Fråga..9', '7-9', crp=T)
mean_sd( 'Fråga..9', '10-13', crp=T)
mean_sd( 'Fråga..9', '14-17', crp=T)
which(data[,28] =='x')
data[which(data[,28] =='x'),29]
data[which(data[,27] =='x'),29]
data[which(data[,26] =='x'),29]
data[which(data[,28] =='x'),29]
data[which(data[,28] =='x'),28]
data[which(data[,28] =='x'),29]
data$CRP[which(data[,28] =='x')] = TRUE
data$STREP[which(data[,29] =='x')] = TRUE
mean_sd( 'Fråga..9', '0-3', crp=T)
mean_sd( 'Fråga..9', '4-6', crp=T)
mean_sd( 'Fråga..9', '7-9', crp=T)
mean_sd( 'Fråga..9', '10-13', crp=T)
mean_sd( 'Fråga..9', '14-17', crp=T)
mean_sd( 'Fråga..9', '0-3', crp=F)
mean_sd( 'Fråga..9', '4-6', crp=F)
mean_sd( 'Fråga..9', '7-9', crp=F)
mean_sd( 'Fråga..9', '10-13', crp=F)
mean_sd( 'Fråga..9', '14-17', crp=F)
data[,28:31]
data[,27:31]
data$Fråga..10 <- data$Fråga..10.VAS.CRP
data$Fråga..10[which(data$STREP)] <- data$Fråga..10.VAS.
data$Fråga..10[which(data$STREP)] <- data$'Fråga..10.VAS.strep'[which(data$STREP)]
data$'Fråga..10.VAS.strep'[which(data$STREP)]
data$Fråga..10 <- as.character(data$Fråga..10.VAS.CRP)
data$Fråga..10[which(data$STREP)] <- as.character(data$'Fråga..10.VAS.strep'[which(data$STREP)])
data$Fråga..10
data[,27:32]
data$Fråga..10
factor(data$Fråga..10)
data$Fråga..10 = factor(data$Fråga..10)
cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) )
plot8cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) ))
plot(cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) ))
t = plot(cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) )
)
t
plot(t)
plot( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) 
)
plot( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) ,scatter=T)
plot( jitter(as.numeric(as.character(data$Fråga..9)),0.5), jitter( as.numeric(as.character(data$Fråga..10)),0.5))
plot( jitter(as.numeric(as.character(data$Fråga..9)),0.9), jitter( as.numeric(as.character(data$Fråga..10)),0.9))
cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) )
cor.test( as.numeric(as.character(data$Fråga..6)),  as.numeric(as.character(data$Fråga..10)) )
cor.test( as.numeric(as.character(data$Fråga..6)),  as.numeric(as.character(data$Fråga..10)) )
cor.test( as.numeric(as.character(data$Fråga.6)),  as.numeric(as.character(data$Fråga..10)) )
cor.test( as.numeric(as.character(data$Fråga.6)),  as.numeric(as.character(data$Fråga..10)) )
cor.test( as.numeric(as.character(data$Fråga..9)),  as.numeric(as.character(data$Fråga..10)) )
plot( as.numeric(data$Fråga.5) ~ data$Åldern)
plot( as.numeric(data$Fråga.6) ~ data$Åldern)
plot( as.numeric(data$Fråga..10) ~ data$Åldern)
plot( as.numeric(data$Fråga..9) ~ data$Åldern)
plot( as.numeric(data$Fråga..9[which(data$CRP)]) ~ data$Åldern)
which(data$CRP)]
which(data$CRP)
plot( as.numeric(data$Fråga..9[which(data$CRP)]) ~ data$Åldern[which(data$CRP)])
plot( as.numeric(data$Fråga..10[which(data$CRP)]) ~ data$Åldern[which(data$CRP)])
plot( as.numeric(data$Fråga..10[which(data$STREP)]) ~ data$Åldern[which(data$STREP)])
plot( as.numeric(as.character(data$Fråga..10[which(data$STREP)])) ~ data$Åldern[which(data$STREP)])
plot( as.numeric(as.character(data$Fråga..9[which(data$STREP)])) ~ data$Åldern[which(data$STREP)])
plot( as.numeric(as.character(data$Fråga..10[which(data$STREP)])) ~ data$Åldern[which(data$STREP)])
plot( as.numeric(as.character(data$Fråga..10[which(data$CRP)])) ~ data$Åldern[which(data$CRP)])
plot( as.numeric(as.character(data$Fråga..9[which(data$CRP)])) ~ data$Åldern[which(data$CRP)])
q()
ls()
mean_sd_age <- function( column, age, crp=T ) {
if ( crp ) {
ids <- which(data[,'Åldern'] == age & data[,'CRP'] )
}else{
ids <- which(data[,'Åldern'] == age & data[,'STREP'] )
}
#browser()
m = mean( as.numeric(as.character( data[ids,column] )))
s = sd ( as.numeric(as.character( data[ids,column] )))
c (m , s)
}
summary(data)
table( data$kön, data$Åldern )
table( data$kön, data$Åldern )[1,]
plot(table( data$kön, data$Åldern )[1,], table( data$kön, data$Åldern )[3,])
ids =which(data$kön == 'f' )
ids
ids =which(data$kön == 'f' & data$Åldern != '10-13')
ids
id_p =which(data$kön == 'p' & data$Åldern != '10-13')
id_f =which(data$kön == 'f' & data$Åldern != '10-13')
t.test( data$Fråga..10[id_f], data$Fråga..10[id_p])
t.test( as.numeric(as.character(data$Fråga..10[id_f]), as.numeric(as.character((data$Fråga..10[id_p])))
)
t.test( as.numeric(as.character(data$Fråga..10[id_f]), as.numeric(as.character(data$Fråga..10[id_p])))
)
boxplot( as.numeric(as.character(data$Fråga..10[id_f]), as.numeric(as.character(data$Fråga..10[id_p]))))
boxplot(list( 'f' = as.numeric(as.character(data$Fråga..10[id_f]), 'p'= as.numeric(as.character(data$Fråga..10[id_p])))))
boxplot( 'f' = as.numeric(as.character(data$Fråga..10[id_f]), 'p'= as.numeric(as.character(data$Fråga..10[id_p]))))
?boxplot
boxplot( 'x' = as.numeric(as.character(data$Fråga..10[id_f]), 'p'= as.numeric(as.character(data$Fråga..10[id_p]))))
boxplot( 'x' = as.numeric(as.character(data$Fråga..10[id_f]),  as.numeric(as.character(data$Fråga..10[id_p]))))
?boxplot
boxplot( 'x' = as.numeric(as.character(data$Fråga..10[id_f]),  as.numeric(as.character(data$Fråga..10[id_p]))))
boxplot( as.numeric(as.character(data$Fråga..10[id_f])) ~ data$kön )
boxplot( as.numeric(as.character(data$Fråga..10[id_f])) ~ data$kön )
 data$kön
boxplot( as.numeric(as.character(data$Fråga..10)) ~ data$kön )
boxplot( as.numeric(as.character(data$Fråga..10[c(id_f,id_p)])) ~ data$kön[c(id_f,id_p)] )
wilcox.test( as.numeric(as.character(data$Fråga..10[id_f]), as.numeric(as.character(data$Fråga..10[id_p])))
)
jitter(as.numeric(as.character(data$Fråga..10[id_f]))
)
wilcox.test( as.numeric(as.character(data$Fråga..10[id_f])), as.numeric(as.character(data$Fråga..10[id_p])))
wilcox.test( jitter(as.numeric(as.character(data$Fråga..10[id_f]))), jitter(as.numeric(as.character(data$Fråga..10[id_p]))))
t.test( jitter(as.numeric(as.character(data$Fråga..10[id_f]))), jitter(as.numeric(as.character(data$Fråga..10[id_p]))))
mean(as.numeric(as.character(data$Fråga..10[id_f])))
?mean
mean(as.numeric(as.character(data$Fråga..10[id_f])),na.rm =T)
mean(as.numeric(as.character(data$Fråga..10[id_p])),na.rm =T)
system('ctSESAM.py')
system('ctSESAM.py')
summary(data)
data$tidigare_provatgning <- 'no'
data$tidigare_provatgning
data$tidigare_provatgning[which(data$Fråga.4a.N.J == 'j' | data$Fråga.4bN.J == 'j') ]
data$tidigare_provatgning[which(data$Fråga.4a.N.J == 'j' | data$Fråga.4bN.J == 'j') ] = 'yes'
data$tidigare_provatgning <- factor( data$tidigare_provatgning )
data$tidigare_provatgning <- F
data$tidigare_provatgning[which(data$Fråga.4a.N.J == 'j' | data$Fråga.4bN.J == 'j') ] = T
data$tidigare_provatgning
data$tidigare_provatgning_binary <- data$tidigare_provatgning
data$tidigare_provatgning <- F
data$tidigare_provatgning[which(data$Fråga.4a.N.J == 'j' | data$Fråga.4bN.J == 'j') ] = 'yeq
data$tidigare_provatgning <- 'no'
data$tidigare_provatgning[which(data$Fråga.4a.N.J == 'j' | data$Fråga.4bN.J == 'j') ] = 'yes'
data$tidigare_provatgning 
factor(data$tidigare_provatgning)
data$tidigare_provatgning = factor(data$tidigare_provatgning)
plot( as.numeric(as.character(data$Fråga..9)) ~ data$tidigare_provatgning)
wilcox.test( as.numeric(as.character(data$Fråga..9)) , data$tidigare_provatgning)
wilcox.test( as.numeric(as.character(data$Fråga..9)) , as.numeric(data$tidigare_provatgning))
wilcox.test( as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary)) ,as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary))  )
wilcox.test( as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])) ,as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary]))  )
t.test( as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])) ,as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary]))  )
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])))
hist(as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary])),breaks=10)
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])),breaks=10)
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])),breaks=11)
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])),breaks=10)
hist(as.numeric(as.character(data$Fråga..9[!data$tidigare_provatgning_binary])),breaks=10)
x11()
hist(as.numeric(as.character(data$Fråga..9[data$tidigare_provatgning_binary])),breaks=10)
plot( as.numeric(as.character(data$Fråga..9)) ~ data$tidigare_provatgning)
plot( as.numeric(as.character(data$Fråga..9)) ~ data$tidigare_provatgning, ylab="Fråga 9")
plot( as.numeric(as.character(data$Fråga..9)) ~ data$tidigare_provatgning, ylab="Fråga 9",xlab="tidigare provtagning")
t.test( as.numeric(as.character(data$Fråga..10[data$tidigare_provatgning_binary])) ,as.numeric(as.character(data$Fråga..10[!data$tidigare_provatgning_binary]))  )
plot( as.numeric(as.character(data$Fråga..10)) ~ data$tidigare_provatgning, ylab="Fråga 10",xlab="tidigare provtagning")
q()
t.test( as.numeric(as.character(data$Fråga..10[data$tidigare_provatgning_binary])) ,as.numeric(as.character(data$Fråga..10[!data$tidigare_provatgning_binary]))  )
t.test( as.numeric(as.character(data$Fråga..10[id_f])), as.numeric(as.character(data$Fråga..10[id_p])))
plot( as.numeric(as.character(data$Fråga..10)) ~ data$tidigare_provatgning, ylab="Fråga 10",xlab="tidigare provtagning")
summary(data)
hist(data$Fråga.7)
hist(data$Fråga.9)
hist(data$Fråga..9)
cor.test( as.numeric(as.character(data$Fråga.7)), as.numeric(as.character(data$Fråga..9)))
plot(jitter( as.numeric(as.character(data$Fråga.7))), jitter(as.numeric(as.character(data$Fråga..9))))
plot( as.numeric(as.character(data$Fråga.7)) ~ as.numeric(as.character(data$Fråga..9)))
plot(jitter( as.numeric(as.character(data$Fråga.7))), jitter(as.numeric(as.character(data$Fråga..9))))
plot( data$Fråga.7 ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ data$Fråga..9)
plot( data$Fråga.7 ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ data$Fråga..9)
plot( data$Fråga.7 ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ data$Fråga..9)
plot( data$Fråga.7 ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ data$Fråga..9)
plot( data$Fråga.7 ~ data$Fråga..9)
plot(jitter( as.numeric(as.character(data$Fråga.7))), jitter(as.numeric(as.character(data$Fråga..9))))
x11()
plot( data$Fråga.7 ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ jitter(data$Fråga..9))
boxplot( jitter(data$Fråga.7) ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ jitter(data$Fråga..9))
boxplot( jitter(data$Fråga.7) ~ data$Fråga..9)
boxplot( data$Fråga.7 ~ data$Fråga..9, xlab="Fråga 9", ylab="Fråga 7")
boxplot( data$Fråga.7 ~ data$Fråga..9, xlab="Fråga 7", ylab="Fråga 9")
boxplot( data$Fråga.7 ~ data$Fråga..10, xlab="Fråga 7", ylab="Fråga 10")
x11()
plot(jitter( as.numeric(as.character(data$Fråga.7))), jitter(as.numeric(as.character(data$Fråga..10))))
t.test( data$Fråga.7 , data$Fråga..9)
t.test( data$Fråga.7 , data$Fråga..9)
t.test( as.numeric(as.character(data$Fråga.7)) , as.numeric(as.character(data$Fråga..9)))
t.test( as.numeric(as.character(data$Fråga.7)) , as.numeric(as.character(data$Fråga..10)))
cor.test( as.numeric(as.character(data$Fråga..10[id_f])), as.numeric(as.character(data$Fråga..10[id_p])))
cor.test( as.numeric(as.character(data$Fråga.7)) , as.numeric(as.character(data$Fråga..9)))
cor.test( as.numeric(as.character(data$Fråga.7)) , as.numeric(as.character(data$Fråga..10)))
t.test( as.numeric(as.character(data$Fråga.7)) , as.numeric(as.character(data$Fråga..10)), method=2)
?t.test
t.test( as.numeric(as.character(data$Fråga.7)) , as.numeric(as.character(data$Fråga..10)), paired=T)
?cor.test
getOption("na.action")
cor.test( as.numeric(as.character(data$Fråga.6)) , as.numeric(as.character(data$Fråga..10)))
plot( as.numeric(as.character(data$Fråga.6)) , as.numeric(as.character(data$Fråga..10)))
plot( jitter(as.numeric(as.character(data$Fråga.6))) , jitter(as.numeric(as.character(data$Fråga..10))))
plot( jitter(as.numeric(as.character(data$Fråga.9))) , jitter(as.numeric(as.character(data$Fråga..10))))
plot( jitter(as.numeric(as.character(data$Fråga..9))) , jitter(as.numeric(as.character(data$Fråga..10))))
cor.test( as.numeric(as.character(data$Fråga..9)) , as.numeric(as.character(data$Fråga..10)))
cor.test( as.numeric(as.character(data$Fråga.6)) , as.numeric(as.character(data$Fråga..10)), method='spearman')
table( data$CRP, data$Åldern )
table( data$STREP, data$Åldern )
table( data$STREP & data$CRP, data$Åldern )
summary(data)
pie(data$Åldern)
pie(x=data$Åldern)
data$Åldern
?pie
pie(x=table(data$Åldern))
?pie
pie(x=table(data$Åldern), clockwise=T)
pie(x=table(data$Åldern), clockwise=T, col=rainbow(5))
cor.test( as.numeric(as.character(data$Fråga..9)) , as.numeric(as.character(data$Fråga..10)))
which(data$STREP & data$CRP)
data2 <- data[-which(data$STREP & data$CRP),]
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)))
cor.test( as.numeric(as.character(data2$Fråga..6)) , as.numeric(as.character(data2$Fråga..10)))
cor.test( as.numeric(as.character(data2$Fråga.6)) , as.numeric(as.character(data2$Fråga..10)))
cor.test( as.numeric(as.character(data2$Fråga.7)) , as.numeric(as.character(data2$Fråga..10)))
cor.test( as.numeric(as.character(data$Fråga.6)) , as.numeric(as.character(data$Fråga..10)))
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)))
pie(x=table(data$Åldern), clockwise=T, col=rainbow(5))
hist(data$Åldern)
hist(as.numeric(as.character(data$Åldern))
)
hist(as.numeric(as.character(data$Åldern)))
?hist
hist(as.numeric(as.character(data$Åldern)))
hist(as.numeric(as.character(data$Åldern)), breaks=10)
as.numeric(as.character(data$Åldern))
pie(x=table(data$Åldern), clockwise=T, col=rainbow(5))
table(data$Åldern)
table(data$Åldern) / sum(table(data$Åldern)) * 100
round(table(data$Åldern) / sum(table(data$Åldern)) * 100)
sum(round(table(data$Åldern) / sum(table(data$Åldern)) * 100))
round(table(data$Åldern) / sum(table(data$Åldern)) * 100 ,3)
round(table(data$Åldern) / sum(table(data$Åldern)) * 100 ,2)
round(table(data$Åldern) / sum(table(data$Åldern)) * 100 ,1)
sum(round(table(data$Åldern) / sum(table(data$Åldern)) * 100 ,1) )
pie(x=table(data$Åldern), clockwise=T, col=rainbow(5))
pdf( file="Age_pie.pdf", width=6, height=6)
pie(x=table(data$Åldern), clockwise=T, col=rainbow(5))
def.off()
dev.off()
q()
summary(data)
data$Fråga.2a..J.N / 155 * 100
table(data$Fråga.2a..J.N) / 155 * 100
table(data$Fråga.2b.J.N) / 155 * 100
table(data$Fråga.3...1.schlechter..0.unverändert...1.besser.) / 155 * 100
sum( data$Kräkningar, data$Diarre, data$Magont)
sum( as.numeric(data$Kräkningar), as.numeric(data$Diarre), as.numeric(data$Magont))
sum( as.numeric(as.character(data$Kräkningar)), as.numeric(as.character(data$Diarre)), as.numeric(as.character(data$Magont)))
apply( data[,'Kräkningar','Diarre','Magont')],1, function (x) sum(as.numeric(as.character(x))) as.numeric(as.character(data$Magont)))
apply( data[,'Kräkningar','Diarre','Magont')],1, function (x) sum(as.numeric(as.character(x)))
apply( data[,c('Kräkningar','Diarre','Magont')],1, function (x) sum(as.numeric(as.character(x)))
)
apply( data[,c('Kräkningar','Diarre','Magont')],1, function (x) sum(as.numeric(as.character(x))))
table(apply( data[,c('Kräkningar','Diarre','Magont')],1, function (x) sum(as.numeric(as.character(x)))))
table(data[,c(6,7,8,10,11,12,13,14,15)])
table(data[,6],data[,7],data[,8],data[,10],data[,11],data[,12],data[,13],data[,14],data[,15])])
table(data[,6],data[,7],data[,8],data[,10],data[,11],data[,12],data[,13],data[,14],data[,15])
table(t(data[,c(6,7,8,10,11,12,13,14,15)]))
data$illnes = ''
colnames(data)[c(6,7,8,10,11,12,13,14,15)]
for (n in colnames($illnes[ids] = paste( )[c(6,7,8,10,11,12,13,14,15)]){
ids = which(data[,n] == 1)
data$illnes[ids] = paste( data$illnes[ids], n)
}
for (n in colnames(data[c(6,7,8,10,11,12,13,14,15)]){
ids = which(data[,n] == 1)
data$illnes[ids] = paste( data$illnes[ids], n)
}
for (n in colnames(data)[c(6,7,8,10,11,12,13,14,15)]){
ids = which(data[,n] == 1)
data$illnes[ids] = paste( data$illnes[ids], n)
}
data$illnes
table(data$illnes)
t(table(data$illnes))
write.table(data, sep="\t", quote=F, file="all_data.xls" )
q)
q()
=======
>>>>>>> 040020db25ce7e2a0d16f3174ce85eeb2efc57d7
