Plot(ggplot(STREP, aes( Åldern, data.10 )) +geom_boxplot() +ylab(''),
'Question_10_STREP' )
pl = ggplot(data=ag_melted, aes (x=ag_melted$'Ålder', y=ag_melted$'value', fill=ag_melted$'kön')) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "Kön")
Plot( pl, 'Åldersfördelning_kön')
colnames(data)
data$Fråga.4a.N.J
data$Fråga.4bN.J
which(is.na(data$Fråga.4a.N.J))
which(is.na(data$Fråga.4a.N.J)==T)
which(data$Fråga.4a.N.J=='na')
which(data$Fråga.4b.N.J=='na')
which(data$Fråga.4bN.J=='na')
data$Fråga.4a..Antal
which(data$Fråga.4a.N.J=='j')
which(data$Fråga.4bN.J=='j')
unique(c(which(data$Fråga.4a.N.J=='j'),which(data$Fråga.4bN.J=='j')))
data$tidigare_provtagning = FALSE
data$tidigare_provtagning[unique(c(which(data$Fråga.4a.N.J=='j'),which(data$Fråga.4bN.J=='j')))] = TRUE
data$tidigare_provtagning
CRP <- data[which(data$CRP),]
STREP <- data[which(data$STREP),]
ta <- table(data$tidigare_provtagning , data$Åldern)
ta
melt(ta)
ta_melted = melt(ta)
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Åldern', 'value')
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
ta <- table(data$tidigare_provtagning , data$Åldern)
ta_melted = melt(ta)
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Ålder', 'value')
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
pl + scale_fill_brewer(palette="Paired") 
ta
ta$NO_percent <- ta$'FALSE' / ( ta$'FALSE' +ta$'TRUE') *100
ta$NO_percent <- ta[1,] / ( ta[1,] +ta[,2]) *100
ta <- table(data$tidigare_provtagning , data$Åldern)
data.frame(ta)
table(data$tidigare_provtagning , data$Åldern)
colnames(ta)
roqnames(ta)
rownames(ta)
class(ta)
as.data.frame(ta)
ta[,3] <- ta[1,] / ( ta[1,] +ta[,2]) *100
ta[3,] <- ta[1,] / ( ta[1,] +ta[,2]) *100
ta[3,] <- ta[1,] / ( ta[1,] +ta[2,]) *100
as.matrix(ta)
as.data.frame(as.matrix(ta))
as.matrix(ta)
class(as.matrix(ta))
write.table(ta, file="tables/provtagning_age.tab", sep="\t",quote=F)
d <- read.delim("tables/provtagning_age.tab")
d
colnames(d) <- colnames(ta)
d
class(d)
ta$NO_percent <- ta[1,] / ( ta[1,] +ta[,2]) *100
d$NO_percent <- d[1,] / ( d[1,] +d[,2]) *100
d
d$NO_percent <- d[1,] / ( d[1,] +d[2,]) *100
d[1,] / ( d[1,] +d[2,]) *100
as.vector(d[1,] / ( d[1,] +d[2,]) *100)
as.vector(t(d[1,] / ( d[1,] +d[2,]) *100))
d$NO_percent <-as.vector(t(d[1,] / ( d[1,] +d[2,]) *100))
rbind(d, d[1,] / ( d[1,] +d[2,]) *100)
d = rbind(d, d[1,] / ( d[1,] +d[2,]) *100)
d = rbind(d, d[2,] / ( d[1,] +d[2,]) *100)
d
rownames(d) <- c('No','Yes', 'No [%]', 'Yes [%]' )
d
melt(d)
melt(d, id=rownames(d))
cbind( colnames(d), d)
cbind( rownames(d), d)
cbind( measure=rownames(d), d)
d = cbind( measure=rownames(d), d)
melt(d)
ta_melted = melt(d)
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Ålder', 'value')
ta_melted
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
ta_melted = melt(d[c(3,4),])
ta_melted
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Ålder', 'value')
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
#geom_bar(stat="identity", color="black", position=position_dodge())+
geom_bar(stat="identity", color="black")+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
ta_melted = melt(d[,4:3])
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Ålder', 'value')
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
#geom_bar(stat="identity", color="black", position=position_dodge())+
geom_bar(stat="identity", color="black")+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
ta_melted
melt(d[,4:3])
d
melt(d[,4:3], ids=c('measure'))
melt(d[4:3,])
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Ålder', 'value')
ta_melted = melt(d[4:3,])
colnames(ta_melted) <- c( 'tidigare_provtagning', 'Ålder', 'value')
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
#geom_bar(stat="identity", color="black", position=position_dodge())+
geom_bar(stat="identity", color="black")+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
ta_melted
ta_melted[,1]
ta_melted[,1] <- factor( as.character(ta_melted[,1]), levels=c('Yes [%]','No [%]'))
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
#geom_bar(stat="identity", color="black", position=position_dodge())+
geom_bar(stat="identity", color="black")+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
?scale_fill_brewer
pl = pl + scale_fill_manual(values=c('green','lightgray'))
pl
pl = ggplot(data=ta_melted, 
aes (x=Ålder, y=value, fill=tidigare_provtagning)
     ) +
geom_bar(stat="identity", color="black", position=position_dodge())+
#geom_bar(stat="identity", color="black")+
theme_minimal()
pl = pl + xlab('Ålder') + ylab('patient [n]') + labs(fill = "tidigare provtagning")
pl
pl_besides = pl
pl + geom_bar(stat="identity", color="black")
x11()
pl
pl
Plot(pl, 'Åldersfördelning_tidigare provtagning')
pl
pl = pl + xlab('Ålder') + ylab('patient [%]') + labs(fill = "tidigare provtagning")
Plot(pl, 'Åldersfördelning_tidigare provtagning')
ggplot(data, aes( Åldern, data.9 )) +geom_boxplot() +ylab('') +
scale_y_continuous(breaks=c(0,2,4,6,8, 10))
Plot(ggplot(data, aes( Åldern, data.9 )) +geom_boxplot() +ylab('') +
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_9_all' )
Plot(ggplot(CRP, aes( Åldern, data.9 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_9_CRP' )
Plot(ggplot(STREP, aes( Åldern, data.9 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_9_STREP' )
## question 10
Plot(ggplot(data, aes( Åldern, data.10 )) +geom_boxplot(na.rm = TRUE) +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_10_all' )
Plot(ggplot(CRP, aes( Åldern, data.10 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_10_CRP' )
Plot(ggplot(STREP, aes( Åldern, data.10 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_10_STREP' )
Plot = function (p, file ) {
pdf(file=paste("../figures/",file,'.pdf',sep=''), width=4, height=4)
print(p)
dev.off()
png(file=paste("../figures/",file,'.png',sep=''), width=600, height=600)
print(p)
dev.off()
}
Plot(ggplot(data, aes( Åldern, data.9 )) +geom_boxplot() +ylab('') +
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_9_all' )
Plot(ggplot(CRP, aes( Åldern, data.9 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_9_CRP' )
Plot(ggplot(STREP, aes( Åldern, data.9 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_9_STREP' )
## question 10
Plot(ggplot(data, aes( Åldern, data.10 )) +geom_boxplot(na.rm = TRUE) +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_10_all' )
Plot(ggplot(CRP, aes( Åldern, data.10 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_10_CRP' )
Plot(ggplot(STREP, aes( Åldern, data.10 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_10_STREP' )
colnames(data)
data$Fråga..8
Plot(ggplot(data, aes( Åldern, Fråga..8 )) +geom_boxplot(na.rm = TRUE) +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_8_all' )
Plot(ggplot(CRP, aes( Åldern, Fråga..8 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_8_CRP' )
Plot(ggplot(STREP, aes( Åldern, Fråga..8 )) +geom_boxplot() +ylab('')+
scale_y_continuous(breaks=c(0,2,4,6,8, 10)),
'Question_8_STREP' )
summary(data$tidigare_provtagning)
133/ (133+22) *100
t <- c( 0,0,0,0,1,1,5,9,10)
hist(t)
hist(t, breaks = 10)
mean (t)
median (t)
mad(t)
sd(t)
rnorm(2.888889, 4.075673, 100)
rnorm(100,2.888889, 4.075673)
x11()
hist(rnorm(100,2.888889, 4.075673))
summary(data)
save(data, file="data.RData")
summary(data)
summary(data)
92/155
86/155
86/156
133/156
q()
ls()
ag_melted
write.table(ag_melted, file="../tables/Åldersfördelning_kön.xls", sep="\t", quote=F,row.names=F)
sytem( 'lpr ../tables/Åldersfördelning_kön.xls')
system( 'lpr ../tables/Åldersfördelning_kön.xls')
write.table(ta_melted, file="../tables/Åldersfördelning_tidigare provtagning.xls", sep="\t", quote=F,row.names=F)
?jitter
cor.test( c1,2,3,4,5,6) ,c(2,3,4,3,2), method="spearman")
cor.test( c(1,2,3,4,5,6) ,c(2,3,4,3,2), method="spearman")
cor.test( c(1,2,3,4,5,6) ,c(2,3,4,3,2,1), method="spearman")
cor.test( c(1,2,3,4,5,6) ,c(2.1,3.1,4,3,2,1), method="spearman")
cor.test( c(1,2,3,4,5,6) ,c(2.1,3.1,4,3,2,1))
 t.test( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1])
 wilcox.test( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1])
t.test( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1])
wicox.test( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1])
wilcox.test( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1])
wilcox.test( jitter(as.numeric(as.character(data$Fråga..10))[only_1]), jitter(as.numeric(as.character(data$Fråga..10))[more_than_1]))
wicox.test( jitter(as.numeric(as.character(data$Fråga..10))[only_1]), jitter(as.numeric(as.character(data$Fråga..10))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))$p.value
 wilcox.test( jitter(as.numeric(as.character(data$Fråga..9))[only_1]), jitter(as.numeric(as.character(data$Fråga..9))[more_than_1]))$statistic
two_group <- function ( data1, data2 ) {
        d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
        for ( i in 1:1000 ) {
                t <- wilcox.test( jitter(data1), jitter(data2) )
                d[i] <- t$p.value
                s[i] <- t$statistic
        }
        list( mean.p.value =mean (d), mean.statistics=mean(s))
}
two_group( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1] )
two_group( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1])
q()
ls()
summary(data)
mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman')
mean_cor_test('Fråga..9', 'Fråga..10', 'spearman')
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)))
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)), method='spearman')
cor.test( as.numeric(as.character(data2$Fråga..9)) , as.numeric(as.character(data2$Fråga..10)), method='spearman')$p.value
cor.test( jitter(as.numeric(as.character(data2$Fråga..9))) , jitter(as.numeric(as.character(data2$Fråga..10))), method='spearman')$p.value
plot(jitter(as.numeric(as.character(data2$Fråga..9))) , jitter(as.numeric(as.character(data2$Fråga..10))))
x11()
plot(as.numeric(as.character(data2$Fråga..9)) ,as.numeric(as.character(data2$Fråga..10)))
data[mc('Fråga..10', 'Fråga..10.VAS.CRP')
]
data[,c('Fråga..10', 'Fråga..10.VAS.CRP')]
colnmaes(data)
colnames(data)
data[,c('Fråga..10', 'Fråga..10.VAS.strep')]
mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman')
mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman')
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(as.numeric(as.character(data[, colA]))), 
jitter(as.numeric(as.character(data[, colB]))),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r))
}
two_group <- function ( data1, data2 ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d), mean.statistics=mean(s))
}
mean_cor_test('Fråga.6', 'Fråga..9', 'spearman')
stat_results = NULL
stat_results = rbind( stat_results, mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..9', 'Fråga..10', 'spearman') )
stat_results
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1]) )
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1] ) )
stat_results
mean_cor_test <- function (colA, colB,  method="pearson" ) {
d <- vector('numeric', 1000)
r <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t  <- cor.test( 
jitter(as.numeric(as.character(data[, colA]))), 
jitter(as.numeric(as.character(data[, colB]))),
method=method
)
d[i] <- t$p.value
r[i] <- t$estimate
}
list( test=paste(method, 'n=1000'), comparing = paste( colA, colB, sep=" vs. "), mean.p.value =mean (d), mean.estimate=mean(r), mean.statistics="only two group comparisons")
}
two_group <- function ( data1, data2 ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s))
}
stat_results = NULL
stat_results = rbind( stat_results, mean_cor_test('Fråga.6', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.6', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga.7', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..9', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..8', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.CRP', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test( 'Fråga..9', 'Fråga..10.VAS.strep', 'spearman') )
stat_results = rbind( stat_results,mean_cor_test('Fråga..9', 'Fråga..10', 'spearman') )
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..9))[only_1], as.numeric(as.character(data$Fråga..9))[more_than_1]) )
stat_results = rbind( stat_results,two_group( as.numeric(as.character(data$Fråga..10))[only_1], as.numeric(as.character(data$Fråga..10))[more_than_1] ) )
stat_results
two_group <- function ( data1, data2, colA, colB ) {
d <- vector('numeric', 1000)
        s <- vector('numeric', 1000)
for ( i in 1:1000 ) {
t <- wilcox.test( jitter(data1), jitter(data2) )
d[i] <- t$p.value
s[i] <- t$statistic
}
list(test='wilcox.test n=1000', comparing = paste( colA, colB, sep=" vs. "),  mean.p.value =mean (d),mean.estimate="Only correlations", mean.statistics=mean(s))
}
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
)
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
) 
rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..9))[only_1], 
as.numeric(as.character(data$Fråga..9))[more_than_1],
'Fråga 9 Antal barn i familien = 1',
'Fråga 9 Antal barn i familien > 1'
)
)
stat_results = rbind( stat_results,
two_group( as.numeric(as.character(data$Fråga..10))[only_1], 
as.numeric(as.character(data$Fråga..10))[more_than_1],
'Fråga 10 Antal barn i familien = 1',
'Fråga 10 Antal barn i familien > 1'
)
) 
stat_results
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pokar'
)
stat_results = rbind( stat_results, 
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pokar'
)
)
stat_results = rbind( stat_results, 
two_group( 
as.numeric(as.character(data$Fråga..10[id_f])), 
as.numeric(as.character(data$Fråga..10[id_p])),
'Fråga 10 flickor',
'Fraga 10 pojkar'
)
)
stat_results
stat_results <- stat_results[-18,]
stat_results
write.table( stat_results, file='../tables/AllStatResults.xls', row.names=F, quote=F, sep='\t')
q()
